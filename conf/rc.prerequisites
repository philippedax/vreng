#! /bin/sh
#
# rc.prerequisites
#
# check and install needed requirements
#
# note:
#       this script has been tested on macos but not on Linux and *BSD,
#       if you don't trust this script you are free to make these requirements by hand,
#       then initialize the variable
#
#         by_hand="yes".
#
# Philippe Dax - 2024
#
by_hand="no"	# change to "yes" if you prefer to not execute this script

if [ "$by_hand" == "yes" ]; then
  exit 0
fi

dist=
pack=
dyl=so
dev=
ret=0
pfx=/usr

#
# determines os
#
case $(uname -s) in

Darwin)	# macos
  dist=macos
  echo "$(basename $0): have $dist !"

  # brew
  if [ ! $(which brew) ]; then
    echo "$(basename $0): get brew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  else
    echo "$(basename $0): have brew !"
    pack="brew install"
    dyl=dylib
    dev=
    pfx=/opt/X11
  fi
  # X11
  if [ ! $(which xquartz) ]; then
    echo "$(basename $0): get xquartz..."
    brew install --cask xquartz
  else
    echo "$(basename $0): have xquartz !"
  fi
  java=java
  ret=0
  ;;

Linux)	# debian, ubuntu, mint, fedora, centos, arch
  dist=$(cat /etc/*-release | grep ID | head -n1 | cut -d '=' -f2)
  if [ $dist != "" ]; then
    echo "$(basename $0): have $dist !"
    ret=0
  else
    echo "$(basename $0): dist $dist unknown"
    ret=1
  fi

  if [ $(which apt-get) ]; then
    echo "$(basename $0): have apt-get !"
    pack="sudo apt-get install -y"
    dev="-dev"
    dyl=so
    pfx=/usr
    java="default-jdk"
  elif [ $(which dnf) ]; then
    echo "$(basename $0): have dnf !"
    pack="sudo dnf install"
    dev="-devel"
    dyl=so
    pfx=/usr
    java="java-1.8.0-openjdk.x86_64"
  elif [ $(which yum) ]; then
    echo "$(basename $0): have yum !"
    pack="sudo yum install"
    dev="-devel"
    dyl=so
    pfx=/usr
    java="java-1.8.0-openjdk.x86_64"	# not sure
  elif [ $(which pacman) ]; then
    dist=arch
    echo "$(basename $0): have pacman !"
    pack="sudo pacman -S"
    dyl=so
    pfx=/usr
    java=java	# not sure
  else
    echo "$(basename $0): unknown linux distrib"
    ret=1
    exit $ret
  fi
  ret=0
  ;;

*bsd|*BSD)	# freeBSD, netBSD, openBSD
  pack="sudo pkg"
  echo "$(basename $0): bsd distrib"
  dyl=so
  pfx=/usr
  java=java	# not sure
  ret=0
  ;;

*)
  echo "$(basename $0): unknown system"
  ret=1
  exit $ret
  ;;
esac

#
# autotools
#
if [ ! $(which autoconf) ]; then
  echo "$(basename $0): get autoconf..."
  $pack autoconf
else
  echo "$(basename $0): have autoconf !"
fi

if [ ! $(which automake) ]; then
  echo "$(basename $0): get automake..."
  $pack automake
else
  echo "$(basename $0): have automake !"
fi

if [ ! $(which aclocal) ]; then
  echo "$(basename $0): get aclocal..."
  $pack aclocal
else
  echo "$(basename $0): have aclocal !"
fi

if [ ! $(which autoreconf) ]; then
  echo "$(basename $0): get autoreconf..."
  $pack autoreconf
else
  echo "$(basename $0): have autoreconf !"
fi

#
# compilers
#
if [ ! $(which g++) ]; then
  echo "$(basename $0): get g++..."
  $pack g++
else
  echo "$(basename $0): have g++ !"
fi

if [ ! $(which gcc) ]; then
  echo "$(basename $0): get gcc..."
  $pack gcc
else
  echo "$(basename $0): have gcc !"
fi

#
# graphic libs
#

# openGL
pfx=$(which xinit | cut -d '/' -f 1,2,3)	# assume X11 is installed
if [ ! -f $pfx/lib/libGL.$dyl ]; then
  echo "$(basename $0): get libGL..."
  $pack libgl$dev
  $pack libGL$dev
else
  echo "$(basename $0): have libGL !"
fi

if [ ! -f $pfx/lib/libGLU.$dyl ]; then
  echo "$(basename $0): get libGLU..."
  $pack libglu$dev
  $pack libGLU$dev
else
  echo "$(basename $0): have libGLU !"
fi

# X11
if [ ! -f $pfx/lib/libX11.$dyl ]; then
  echo "$(basename $0): get libX11..."
  $pack libX11$dev
else
  echo "$(basename $0): have libX11 !"
fi

if [ ! -f $pfx/lib/libXmu.$dyl ]; then
  echo "$(basename $0): get libXmu..."
  $pack libXmu$dev
else
  echo "$(basename $0): have libXmu !"
fi

if [ ! -f $pfx/lib/libICE.$dyl ]; then
  echo "$(basename $0): get libICE..."
  $pack libICE$dev
else
  echo "$(basename $0): have libICE !"
fi

if [ ! -f $pfx/lib/libXpm.$dyl ]; then
  echo "$(basename $0): get libXpm..."
  $pack libXpm$dev
else
  echo "$(basename $0): have libXpm !"
fi

pfx=/usr/local
if [ ! -f $pfx/lib/libjpeg.$dyl ]; then
  echo "$(basename $0): get libjpeg..."
  $pack libjpeg$dev
else
  echo "$(basename $0): have libjpeg !"
fi

pfx=$(freetype-config --prefix)
pfx=/usr/local
if [ ! -f $pfx/lib/libfreetype.$dyl ]; then
  echo "$(basename $0): get freetype..."
  $pack freetype$dev
else
  echo "$(basename $0): have freetype !"
fi

#
# optional
#
if [ ! $(which ocaml) ]; then
  echo "$(basename $0): get ocaml..."
  $pack ocaml
else
  echo "$(basename $0): have ocaml !"
fi

if [ ! $(which sqlite3) ]; then
  echo "$(basename $0): get sqlite3..."
  $pack sqlite3
else
  echo "$(basename $0): have sqlite3 !"
fi

if [ ! $(which java) ]; then
  echo "$(basename $0): get java..."
  $pack $java
else
  echo "$(basename $0): have java !"
fi

#if [ ! f /usr/local/lib/libopenal.$dyl ]; then
#  echo "$(basename $0): get openal..."
#else
#  echo "$(basename $0): have openal !"
#  $pack openal
#fi
ret=0

exit $ret
